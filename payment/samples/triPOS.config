<?xml version="1.0" encoding="utf-8"?>
<tripos xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!--The version of the config file.-->
  <configVersion>1</configVersion>
  <developers>
    <!--Contains a list of developer identities which can be used to access triPOS through rest calls. You can set the developerKey and developerSecret to any value you want as long as the developerKeys are unique within this file. You may have multiple developer entries-->
    <developer>
      <!--This is the key that is transmitted in the clear as part of the header of each request to triPOS-->
      <developerKey>bbdcd0b1-61ea-4d89-a16c-c843833bed39</developerKey>
      <!--This is the secret that is used to sign each request to triPOS-->
      <developerSecret>a7a33930-6d7e-4d1a-88b6-8971f0db3edf</developerSecret>
    </developer>
  </developers>
  <server>
    <!--This is the port which the triPOS service will listen at. Setting it to 8080, for example, will make a REST web service available at http://localhost:8080/-->
    <listeningPort>8080</listeningPort>
    <!--Use HTTPS for REST web service requests to the port specified in listeningPort.-->
    <useHttps>false</useHttps>
  </server>
  <host>
    <!--Enter 'Express' or 'Null'. Use Null to test without any connection to Express.-->
    <driver>Express</driver>
    <!--Your Express Acceptor ID which is also your Merchant ID.-->
    <!--<acceptorId>3928907</acceptorId>-->
    <!--Your Express Account ID.-->
    <!--<accountId>1056714</accountId>-->
    <!--Your Express Account Token.-->
    <!--<accountToken>595A978A7644C29939854416AD2385F3947BF3B6FE8FE484672639D26CF37640BE008E01</accountToken>-->

    <!--Your Express Acceptor ID which is also your Merchant ID.-->
    <!-- CONFIG BELOW WAS PROVIDED SO WE CAN TEST EMV CHIPS-->
    <acceptorId>874767463</acceptorId>
    <!--Your Express Account ID.-->
    <accountId>1056725</accountId>
    <!--Your Express Account Token.-->
    <accountToken>FBE558D26FA8AB3A93C5FB93465095B673672F57D0EE2CB8657B787DEE3EB2AD21D6DF01</accountToken>
    <!--During Automatic Reversals how many times should we retry running the reversal before giving up?-->
    <autoReversalRetryLimit>1</autoReversalRetryLimit>
  </host>
  <application>
    <!--Set to 'true' to be in Test/Certification mode or 'false' for Production mode. When test mode is set to true, if 'signature' is in the 'tp-authorization' in the request header then requests will be validated. If there is no 'signature' in the 'tp-authorization' header when you are in test mode, a valid 'credential' is still expected as part of the header is still required in the request header. tp-authorization headers should look something like this: tp-authorization: Version=1.0, Algorithm=TP-HMAC-SHA256, Credential=045c58b9-7441-495f-849a-5a6de45fbe31, SignedHeaders=accept;accept-encoding;accept-language;connection;dnt;host;origin;user-agent, Nonce=084abe6d-b7a2-4de6-8364-4d31e81cdca1, RequestDate=2014-10-02T06:17:47.9449347Z, Signature=f6326a9ca5614747a478cdc9e58525f73831f36dc73120a2eea61bcc98ef79c0. -->
    <testMode>true</testMode>
    <!--Message to display on the PIN pad when it is idle-->
    <pinPadIdleMessage>Welcome to YourCompany</pinPadIdleMessage>
    <!--Origins triPOS will accept requests from: Disabled by default, use * to accept from any origin-->
    <corsAllowedOrigins />
    <!--Default reboot time. Will be used if the reboot time is not specified in the pinpad section under lanes.-->
    <defaultRebootTime>0300</defaultRebootTime>
  </application>
  <transaction>
    <!--allowPartialApprovals: If set to true, partial approvals are allowed.-->
    <allowPartialApprovals>false</allowPartialApprovals>
    <!--confirmOriginalAmount: If set to true, the original transaction amount will be confirmed after card information is obtained.-->
    <confirmOriginalAmount>true</confirmOriginalAmount>
    <!--creditAvsEntryCondition: Set when AVS entry (billing postal code entry) should be prompted for credit transactions: 'Always', 'Never' or 'Keyed'. 'Keyed' indicates that cards that are manually keyed in should be prompted for AVS.-->
    <creditAvsEntryCondition>Keyed</creditAvsEntryCondition>
    <!--checkForDuplicateTransactions: If set to true, enables duplicate checking for all transactions. This can be overridden on a per request basis.-->
    <checkForDuplicateTransactions>true</checkForDuplicateTransactions>
    <!--Leave as 0 or empty to always require a signature for credit sale, otherwise set to the amount that must be reached before asking for a signature, such as 25.00.-->
    <creditSaleSignatureThresholdAmount>0.00</creditSaleSignatureThresholdAmount>
    <!--currencyCode: The currency code that will be used for all transactions. Possible values are Usd for United States dollar.-->
    <currencyCode>Usd</currencyCode>
    <!--surcharge: Enter a decimal amount to add to debit transactions. Please read the credit / debit card surcharge statutes as they pertain to your state of business: http://www.ncsl.org/research/financial-services-and-commerce/credit-or-debit-card-surcharges-statutes.aspx-->
    <debitSurcharge>0.00</debitSurcharge>
    <!--This value determines the system's behavior for allowing swipe fallback for a chip card.-->
    <emvFallbackAllowed>AllowAfterChipError</emvFallbackAllowed>
    <!--isCashbackAllowed: Set to true to allow cashback.-->
    <isCashbackAllowed>false</isCashbackAllowed>
    <!--isCscSupported: Set to true to prompt cardholder to enter card security code for keyed card entry.-->
    <isCscSupported>false</isCscSupported>
    <!--isDebitSupported: Set to true to allow debit only cards to be used. The credit functionality of check cards will still work if this is set to false.-->
    <isDebitSupported>true</isDebitSupported>
    <!--isDebitRefundSupported: Set to true to allow refunds onto a debit card. Not all processors support this.-->
    <isDebitRefundSupported>false</isDebitRefundSupported>
    <!--IsEbtRefundSupported: Set to true to allow refunds onto a EBT card. Not all processors support this.-->
    <isEbtRefundSupported>false</isEbtRefundSupported>
    <!--isGiftSupported: Set to true to allow Vantiv gift cards to be used.-->
    <isGiftSupported>false</isGiftSupported>
    <!--isEbtFoodStampSupported: Set to true to allow Ebt Food stamp cards to be used.-->
    <isEbtFoodStampSupported>false</isEbtFoodStampSupported>
    <!--isEbtCashBenefitSupported: Set to true to allow Ebt Cash benefit cards to be used.-->
    <isEbtCashBenefitSupported>false</isEbtCashBenefitSupported>
    <!--isEmvSupported: Set to true to allow EMV cards to be used. EMV cards are also sometimes called chip cards, smart cards, or IC cards.-->
    <isEmvSupported>true</isEmvSupported>
    <!--confirmConvenienceFeeAmount: Set to true to prompt the cardholder to confirm the convenienceFeeAmount on the PIN pad.-->
    <confirmConvenienceFeeAmount>true</confirmConvenienceFeeAmount>
    <!--isHealthcareSupported: This value determines if triPOS will allow healthcare data in sale and auth requests for integrators that may be required to implement an Inventory Information Approval System (IIAS) for retail point of sale systems-->
    <isHealthcareSupported>false</isHealthcareSupported>
    <!--isTipAllowed: Set to true to allow tips to be added.-->
    <isTipAllowed>false</isTipAllowed>
    <!--cashbackSelections: Enter whole numbers separated by commas for the cashback amounts to select from. Use 'other' to show 'other' on the pin pad.-->
    <cashbackSelections>1,2,3,4,5,other</cashbackSelections>
    <!--cashbackAmountIncrement: Increments you want customers to be able to get back. Common values include, 1, 5, 10 and 20.-->
    <cashbackAmountIncrement>5</cashbackAmountIncrement>
    <!--The market code specific to the type of transaction being submitted. This global value can be set, but it can be overridden by a lane configuration value or a request value. AutoRental, DirectMarketing, ECommerce, FoodRestaurant, HotelLodging, Petroleum, Retail, QSR.-->
    <marketCode>QSR</marketCode>
    <!--maximumCashbackAmount: The maximum cashback amount you want to allow cardholders to get back.-->
    <maximumCashbackAmount>100</maximumCashbackAmount>
    <!--tipSelections: Enter decimal numbers for tip amounts. Add percent sign after the number to display a percent option rather than a dollar amount (i.e. 10%, 15%, 20%). If any value is a percentage, it is assumed that all values are percentages. Add 'none' to show "None" on the pin pad, otherwise "Other" will always be shown on the pin pad.-->
    <tipSelections>15%,18%,20%,none</tipSelections>
    <!--The format which signature data should come back as. PointsLittleEndian, PointsBigEndian, Ascii3Byte.-->
    <signatureFormat>PointsLittleEndian</signatureFormat>
    <store>
      <!--Allow triPOS to store transactions automatically upon losing connectivity, or merchant chooses to store on per request basis.Values can be 'automatic' or 'perRequest'.-->
      <storeMode>perRequest</storeMode>
      <!--When storing, triPOS will decline any transaction that causes the sum of all unprocessed transactions to exceed this maxiumum amount.Decimal greater than 0.-->
      <unprocessedTotalAmountLimit>100</unprocessedTotalAmountLimit>
    </store>
    <forward>
      <!--Allow triPOS to forward transactions automatically upon gaining connectivity, or merchant chooses to forward on per request basis.Values can be 'automatic' or 'perRequest'.-->
      <forwardMode>perRequest</forwardMode>
    </forward>
  </transaction>
  <lanes>
    <!--<serialLane description="Serial Lane Example" laneId="1">
      <pinpad>
        <terminalType>PointOfSale</terminalType>
        <driver>IngenicoRba</driver>
        <comPort>COM1</comPort>
        <dataBits>8</dataBits>
        <parity>None</parity>
        <stopBits>One</stopBits>
        <handshake>None</handshake>
        <baudRate>115200</baudRate>
        <isManualEntryAllowed>true</isManualEntryAllowed>
        <isContactlessMsdEntryAllowed>false</isContactlessMsdEntryAllowed>
        <isUnattended>false</isUnattended>
        <idleScreen>
          <message>This is Lane 1</message>
		  <image>logo.jpg</image>
        </idleScreen>
      </pinpad>
      <host>
        <terminalId>0000001</terminalId>
      </host>
      <store>
        <transactionAmountLimit>10</transactionAmountLimit>
      </store>
    </serialLane>-->
    <ipLane description="IP Lane Example" laneId="2">
      <pinpad>
        <terminalType>PointOfSale</terminalType>
        <driver>VeriFoneFormAgentXpi</driver>
        <ipAddress>192.168.0.66</ipAddress>
        <ipPort>9001</ipPort>
        <isManualEntryAllowed>true</isManualEntryAllowed>
        <isContactlessMsdEntryAllowed>false</isContactlessMsdEntryAllowed>
        <idleScreen>
          <message>This is Lane 2</message>
         <image>logo.png</image>
        </idleScreen>
        <isUnattended>false</isUnattended>
      </pinpad>
      <host>
        <terminalId>0000002</terminalId>
      </host>
      <store>
        <transactionAmountLimit>10</transactionAmountLimit>
      </store>
    </ipLane>
  </lanes>
</tripos>